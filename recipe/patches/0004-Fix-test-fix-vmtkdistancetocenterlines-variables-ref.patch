From 5ecf4c27963a20f6f55a4a638a355b123192136b Mon Sep 17 00:00:00 2001
From: Ramtin Gharleghi <gharleghi@gmail.com>
Date: Fri, 29 Jul 2022 13:51:47 +1000
Subject: [PATCH 4/6] Fix test fix: vmtkdistancetocenterlines variables
 referenced before assignment Test for pypescript attribute mismatches between
 SetInputMembers and actual declared variables

---
 tests/test_vmtkScripts/CMakeLists.txt         |  1 +
 tests/test_vmtkScripts/test_pypescripts.py    | 33 +++++++++++++++++++
 .../test_vmtkbranchgeometry.py                |  2 +-
 vmtkScripts/vmtkdistancetocenterlines.py      |  4 ++-
 4 files changed, 38 insertions(+), 2 deletions(-)
 create mode 100644 tests/test_vmtkScripts/test_pypescripts.py

diff --git a/tests/test_vmtkScripts/CMakeLists.txt b/tests/test_vmtkScripts/CMakeLists.txt
index 076ae27..2e66788 100644
--- a/tests/test_vmtkScripts/CMakeLists.txt
+++ b/tests/test_vmtkScripts/CMakeLists.txt
@@ -2,6 +2,7 @@ set(TEST_VMTKSCRIPTS_SRCS
     conftest.py
     test_importvmtkscripts.py
     test_importvtkvmtk.py
+    test_pypescripts.py
     test_vmtkbifurcationprofiles.py
     test_vmtkbifurcationreferencesystems.py
     test_vmtkbifurcationsections.py
diff --git a/tests/test_vmtkScripts/test_pypescripts.py b/tests/test_vmtkScripts/test_pypescripts.py
new file mode 100644
index 0000000..e7c00ce
--- /dev/null
+++ b/tests/test_vmtkScripts/test_pypescripts.py
@@ -0,0 +1,33 @@
+## Program: VMTK
+## Language:  Python
+## Date:      February 12, 2018
+## Version:   1.4
+
+##   Copyright (c) Richard Izzo, Luca Antiga, All rights reserved.
+##   See LICENSE file for details.
+
+##      This software is distributed WITHOUT ANY WARRANTY; without even
+##      the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
+##      PURPOSE.  See the above copyright notices for more information.
+
+## Note: this code was contributed by
+##       Ramtin Gharleghi (Github @ramtingh)
+##       University of New South Wales
+
+import pytest
+import inspect
+from vmtk import vmtkscripts, pypes
+
+scripts = []
+for script in vmtkscripts.__dict__.values():
+    if inspect.isclass(script) and issubclass(script, pypes.pypeScript):
+        scripts.append(script)
+
+@pytest.mark.parametrize("script",scripts)
+def test_vmtkpypescript(script):
+    obj = script()
+    missing = []
+    for member in obj.InputMembers:
+        if not hasattr(obj, member.MemberName):
+            missing.append(member.MemberName)
+    assert not missing
diff --git a/tests/test_vmtkScripts/test_vmtkbranchgeometry.py b/tests/test_vmtkScripts/test_vmtkbranchgeometry.py
index 29b352c..47f706d 100644
--- a/tests/test_vmtkScripts/test_vmtkbranchgeometry.py
+++ b/tests/test_vmtkScripts/test_vmtkbranchgeometry.py
@@ -71,4 +71,4 @@ def test_branch_points_correct(branch_geometry):
 ])
 def test_point_data_is_correct(branch_geometry, pointkey, expectedvalue):
     wrapped_branch_geom = dsa.WrapDataObject(branch_geometry)
-    assert np.allclose(wrapped_branch_geom.PointData.GetArray(pointkey), expectedvalue) == True
+    assert np.allclose(wrapped_branch_geom.PointData.GetArray(pointkey), expectedvalue, rtol=1e-4, atol=1e-7) == True
diff --git a/vmtkScripts/vmtkdistancetocenterlines.py b/vmtkScripts/vmtkdistancetocenterlines.py
index d7d8464..7c2de9e 100644
--- a/vmtkScripts/vmtkdistancetocenterlines.py
+++ b/vmtkScripts/vmtkdistancetocenterlines.py
@@ -36,7 +36,9 @@ class vmtkDistanceToCenterlines(pypes.pypeScript):
         self.ProjectPointArrays = 0
         self.DistanceToCenterlinesArrayName = 'DistanceToCenterlines'
         self.RadiusArrayName = 'MaximumInscribedSphereRadius'
-
+        self.UseRadiusThreshold = False
+        self.RadiusThreshold = 1.0
+        
         self.SetScriptName('vmtkdistancetocenterlines')
         self.SetScriptDoc('calculate the minimum euclidian from surface points to a centerline')
         self.SetInputMembers([
